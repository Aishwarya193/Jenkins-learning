<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="4" hostname="438d7af651b2556" failures="0" tests="12" name="Surefire test" time="8.503" errors="0" timestamp="2023-08-01T14:42:15 IST">
  <testcase classname="SelectExample.BaseTest" name="@BeforeTest launchApp" time="8.432">
    <failure type="org.openqa.selenium.WebDriverException" message="unknown error: net::ERR_CONNECTION_RESET
  (Session info: chrome=115.0.5790.110)
Build info: version: &amp;apos;3.141.59&amp;apos;, revision: &amp;apos;e82be7d358&amp;apos;, time: &amp;apos;2018-11-14T08:17:03&amp;apos;
System info: host: &amp;apos;438D7AF651B2556&amp;apos;, ip: &amp;apos;172.19.7.94&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;11.0.18&amp;apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 115.0.5790.110, chrome: {chromedriverVersion: 115.0.5790.102 (90efd4b0ad6..., userDataDir: C:\Windows\SystemTemp\scope...}, goog:chromeOptions: {debuggerAddress: localhost:57557}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 53f70099bcb3a9f2ec8ea0c091220d03">
      <![CDATA[org.openqa.selenium.WebDriverException: unknown error: net::ERR_CONNECTION_RESET
  (Session info: chrome=115.0.5790.110)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: '438D7AF651B2556', ip: '172.19.7.94', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.18'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 115.0.5790.110, chrome: {chromedriverVersion: 115.0.5790.102 (90efd4b0ad6..., userDataDir: C:\Windows\SystemTemp\scope...}, goog:chromeOptions: {debuggerAddress: localhost:57557}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 53f70099bcb3a9f2ec8ea0c091220d03
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:277)
at SelectExample.BaseTest.launchApp(BaseTest.java:44)
... Removed 33 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeTest launchApp -->
  <testcase classname="TestNGExample.BaseTest" name="@BeforeTest launchApp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeTest launchApp -->
  <testcase classname="TestNGExample.TestNGExample_Annotation" name="@BeforeTest BeforeTest" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeTest BeforeTest -->
  <testcase classname="TestNGExample.TestNGExample_PriorityExample" name="@BeforeTest launchApp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeTest launchApp -->
  <testcase classname="logExample.BaseTest" name="@BeforeTest launchApp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeTest launchApp -->
  <testcase classname="testcases.TestBase" name="@BeforeTest launchApp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeTest launchApp -->
  <testcase classname="TestNGExample.TestNGExample_Annotation" name="@BeforeClass BeforeClass" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeClass BeforeClass -->
  <testcase classname="TestNGExample.TestNGExample_Annotation" name="@BeforeMethod BeforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod BeforeMethod -->
  <testcase classname="TestNGExample.TestNGExample_Annotation" name="@AfterMethod AfterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod AfterMethod -->
  <testcase classname="TestNGExample.TestNGExample_Annotation" name="@BeforeMethod BeforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod BeforeMethod -->
  <testcase classname="TestNGExample.TestNGExample_Annotation" name="@AfterMethod AfterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod AfterMethod -->
  <testcase classname="TestNGExample.TestNGExample_Annotation" name="@AfterClass AfterClass" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass AfterClass -->
  <testcase classname="SelectExample.BaseTest" name="@AfterTest closeApp" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterTest closeApp -->
  <testcase classname="TestNGExample.BaseTest" name="@AfterTest closeApp" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterTest closeApp -->
  <testcase classname="TestNGExample.TestNGExample_Annotation" name="@AfterTest AfterTest" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterTest AfterTest -->
  <testcase classname="TestNGExample.TestNGExample_PriorityExample" name="@AfterTest closeApp" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterTest closeApp -->
  <testcase classname="logExample.BaseTest" name="@AfterTest closeApp" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterTest closeApp -->
  <testcase classname="testcases.TestBase" name="@AfterTest closeApp" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterTest closeApp -->
  <testcase classname="testcases.dashboardSearchCustomerTest" name="login" time="0.0">
    <skipped/>
  </testcase> <!-- login -->
  <testcase classname="testcases.dashboardSearchCustomerTest" name="verifydashboard" time="0.0">
    <skipped/>
  </testcase> <!-- verifydashboard -->
  <testcase classname="testcases.LoginTest" name="verifyLoginFeature" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLoginFeature -->
  <testcase classname="TestNGExample.AmazonTest" name="searchTest" time="0.0">
    <skipped/>
  </testcase> <!-- searchTest -->
  <testcase classname="TestNGExample.TestNGExample_Annotation" name="addItem" time="0.001">
    <skipped/>
  </testcase> <!-- addItem -->
  <testcase classname="TestNGExample.TestNGExample_Annotation" name="payment" time="0.0">
    <skipped/>
  </testcase> <!-- payment -->
  <testcase classname="TestNGExample.TestNGExample_PriorityExample" name="verifyLogin" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLogin -->
  <testcase classname="TestNGExample.TestNGExample_PriorityExample" name="verifySearchItem" time="0.0">
    <skipped/>
  </testcase> <!-- verifySearchItem -->
  <testcase classname="TestNGExample.TestNGExample_PriorityExample" name="verifyAddItem" time="0.001">
    <skipped/>
  </testcase> <!-- verifyAddItem -->
  <testcase classname="TestNGExample.TestNGExample_PriorityExample" name="verifyCancelOrder" time="0.0">
    <skipped/>
  </testcase> <!-- verifyCancelOrder -->
  <testcase classname="TestNGExample.TestNGExample_PriorityExample" name="verifyPayment" time="0.0">
    <skipped/>
  </testcase> <!-- verifyPayment -->
  <testcase classname="TestNGExample.TestNGExample_PriorityExample" name="verifyLogout" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLogout -->
  <testcase classname="testcases.TestBase" name="@BeforeTest launchApp" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest launchApp -->
  <testcase classname="testcases.TestBase" name="@BeforeTest launchApp" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest launchApp -->
  <testcase classname="testcases.TestBase" name="@AfterTest closeApp" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest closeApp -->
  <testcase classname="testcases.TestBase" name="@AfterTest closeApp" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest closeApp -->
</testsuite> <!-- Surefire test -->
